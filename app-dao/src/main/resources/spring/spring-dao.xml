<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
	">
	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<context:property-placeholder location="classpath*:*.properties" />

	<!-- 2.数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->  
		<property value="${jdbc.url}" name="url" />
		<property value="${jdbc.username}" name="username" />
		<property value="${jdbc.password}" name="password" />
		<!-- 配置初始化大小、最小、最大 -->  
		<property name="initialSize" value="1" />  
		<property name="minIdle" value="1" />   
		<property name="maxActive" value="20" /> 
		<!-- 配置获取连接等待超时的时间 -->  
		<property name="maxWait" value="60000" />  
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
		<property name="timeBetweenEvictionRunsMillis" value="60000" />  
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
		<property name="minEvictableIdleTimeMillis" value="300000" /> 
		 
		<property name="validationQuery" value="SELECT 'x'" />  
		<property name="testWhileIdle" value="true" /> 
		<property name="testOnBorrow" value="false" />  
		<property name="testOnReturn" value="false" />  
		
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />    
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		
		<!-- 解密密码必须要配置的项 -->
		<!--property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=true" /-->
		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat" />   
	</bean>

	<!-- 3.配置SqlSessionFactory对象 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactory">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property value="classpath:mybatis-config.xml" name="configLocation" />
		<!-- 扫描entity包 使用别名 -->
		<property value="org.app.entity" name="typeAliasesPackage" />
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property value="classpath:mapper/*.xml" name="mapperLocations" />
	</bean>

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property value="sqlSessionFactory" name="sqlSessionFactoryBeanName" />
		<!-- 给出需要扫描Dao接口包 -->
		<property value="org.app.dao" name="basePackage" />
	</bean>
	
	<!-- 配置事务管理器 -->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource">
    </property></bean>
</beans>
