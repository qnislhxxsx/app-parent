<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
	">
	
	<mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    
	<!-- 配置SpringMVC -->
	<!-- 开启SpringMVC注解模式 -->
	<!-- 简化配置： 
		(1)自动注册DefaultAnotationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 
	-->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!--传统Json格式 -->
			<!--bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="supportedMediaTypes">
				<list>
				<value>text/html;charset=UTF-8</value>避免IE执行AJAX时，返回JSON出现下载文件 
				</list>
				</property>
				</bean-->

			<!--使用阿里的FastJson -->
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
				<property name="features">
					<array>
						<value>WriteMapNullValue</value>
						<value>WriteNullStringAsEmpty</value>
						<!-- 
							QuoteFieldNames:输出key时是否使用双引号,默认为true
							WriteMapNullValue:是否输出值为null的字段,默认为false
							WriteNullNumberAsZero:数值字段如果为null,输出为0,而非null
							WriteNullListAsEmpty:List字段如果为null,输出为[],而非null
							WriteNullStringAsEmpty:字符类型字段如果为null,输出为"",而非null
							WriteNullBooleanAsFalse:Boolean字段如果为null,输出为false,而非null
						-->
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 
		servlet在找页面时，走的是dispatcherServlet路线。找不到的时候会报404,
		加上这个默认的servlet时候，servlet在找不到的时候会去找静态的内容 
		会把"/**" url,注册到SimpleUrlHandlerMapping的urlMap中,
		把对静态资源的访问由HandlerMapping转到org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler
		处理并返回.DefaultServletHttpRequestHandler使用就是各个Servlet容器自己的默认Servlet.
		补充说明：多个HandlerMapping的执行顺序问题：
		DefaultAnnotationHandlerMapping的order属性值是：0
		<mvc:resources/ >自动注册的 SimpleUrlHandlerMapping的order属性值是： 2147483646
		<mvc:default-servlet-handler/>自动注册 的SimpleUrlHandlerMapping 的order属性值是： 2147483647
		spring会先执行order值比较小的。当访问一个a.jpg图片文件时，先通过 DefaultAnnotationHandlerMapping 来找处理器，
		一定是找不到的，我们没有叫a.jpg的Action。再按order值升序找，由于最后一个 SimpleUrlHandlerMapping 是匹 "/**"的，所以一定会匹配上，再响应图片。
	-->
	<mvc:default-servlet-handler />

	<!-- 扫描web相关的bean, 使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="org.app.web.controller"></context:component-scan>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/sample/list" />
			<mvc:exclude-mapping path="/sample/listAll" />
			<mvc:exclude-mapping path="/sample/*/update" />
			<mvc:exclude-mapping path="/sample/arrayPost" />
			<mvc:exclude-mapping path="/css/**" />
			<mvc:exclude-mapping path="/js/**" />
			<bean class="org.app.web.interceptor.WebSecurityInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- freemarker的配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="datetime_format">yyyy-MM-dd</prop><!-- 时间格式化 -->
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="number_format">#.##</prop>
			</props>
		</property>
	</bean>

	<!-- 视图配置 在list中按照配置的先后顺序 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!--property name="ignoreAcceptHeader" value="true" /-->
		<!--property name="defaultContentType" value="text/html" /-->
		<!--property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xls" value="application/vnd.ms-excel" />
				<entry key="xlsx"
					value="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
				<entry key="pdf" value="application/pdf" />
			</map>
		</property-->
		<!--property name="favorParameter" value="false" /-->
		<property name="viewResolvers">
			<list>
				<!-- 这里可配置多个试图解析器，解析时按顺序寻找对应的解析器 -->

				<!-- 配置freeMarker视图解析器 -->
				<bean
					class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="cache" value="true" />
					<property name="prefix" value="" /><!-- 上面已经配了，这里就不用配啦 -->
					<property name="suffix" value=".ftl" />
					<property name="contentType"
						value="text/html;charset=UTF-8" />
					<property name="viewClass"
						value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" /><!-- 默认的，可不写 -->
					<property name="allowSessionOverride" value="true" />
					<property name="allowRequestOverride" value="true" />
					<property name="exposeSpringMacroHelpers"
						value="false" />
					<property name="exposeRequestAttributes"
						value="true" />
					<property name="exposeSessionAttributes"
						value="true" />
					<property name="requestContextAttribute"
						value="request" />
				</bean>

				<!-- 配置jsp 显示ViewResolver -->
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass"
						value="org.springframework.web.servlet.view.JstlView" /><!-- 默认的，可不写 -->
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>

			</list>
		</property>
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>


</beans>